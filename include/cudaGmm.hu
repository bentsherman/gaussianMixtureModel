#ifndef CUDAGMM_HU
#define CUDAGMM_HU

#include <stdlib.h>

__global__ void kernCalcLogLikelihoodAndGammaNK(
	const size_t numPoints, const size_t numComponents,
	const float* logpi, float* logPx, float* loggamma
);

__host__ float cudaGmmLogLikelihoodAndGammaNK(
	cudaDeviceProp* deviceProp,
	const size_t numPoints, const size_t numComponents,
	const float* logpi, float* logP,
	const float* device_logpi, float* device_logP
);

__global__ void kernExp(float* A, float* bias);

__global__ void kernBiasAndLog(float* sumexp, float* bias); 

__host__ void cudaLogSumExp(
	cudaDeviceProp* deviceProp, dim3 grid, dim3 block, 
	const size_t numPoints,
	float* device_src, float* device_dest, 
	float* device_working, 
	cudaStream_t stream
);

__global__ void kernCalcMu(
	const size_t numPoints, const size_t pointDim,
	const float* X, const float* loggamma, const float* logGammaK,
	float* dest
);

__global__ void kernCalcSigma(
	const size_t numPoints, const size_t pointDim,
	const float* X, const float* mu, const float* loggamma, const float* logGammaK,
	float* dest
);

__global__ void kernPrepareCovariances(
	const size_t numComponents, const size_t pointDim,
	float* Sigma, float* SigmaL,
	float* normalizers
);

__global__ void kernUpdatePi(
	const size_t numPoints, const size_t numComponents,
	float* logpi, float* logGamma
);

#endif
