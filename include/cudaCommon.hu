#ifndef CUDACOMMON_H
#define CUDACOMMON_H

#define check(call) { call; cudaError_t __ABC123 = cudaGetLastError(); if(__ABC123 != cudaSuccess) { printf("%s:%d\t%s: %s\n", __FILE__, __LINE__, #call, cudaGetErrorString(__ABC123)); } assert(__ABC123 == cudaSuccess); }

#include <stdlib.h>

__host__ void assertPowerOfTwo(size_t N);

__host__ size_t largestPowTwoLessThanEq(size_t N);

__host__ void calcDim(int N, cudaDeviceProp* devProp, dim3* block, dim3* grid);

__host__ void dimToConsole(dim3* block, dim3* grid);

__host__ float* mallocOnGpu(const size_t N);
 
__host__ float* sendToGpu(const size_t N, const float* A);

__host__ float* pinHostAndSendDevice(const size_t N, float* host);

__host__ void recvDeviceUnpinHost(float* device, float* host, const size_t N);

__host__ void unpinHost(float* device, float* host); 

#endif
